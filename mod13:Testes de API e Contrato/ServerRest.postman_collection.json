{
	"info": {
		"_postman_id": "130975d1-273a-4ae2-a8ff-8b985962af23",
		"name": "ServerRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31160221"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"pm.collectionVariables.set(\"token\", resposta.authorization);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"fulano@qa.com\",\n  \"password\": \"teste\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_base}}/login",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuários - OK (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"pm.collectionVariables.set(\"id_user\", resposta.usuarios[2]._id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200)",
							"});",
							"",
							"pm.test(\"Validar se o campo 'quantidade' existe\", function () {",
							"    pm.expect(resposta.quantidade).to.exist;",
							"});",
							"",
							"pm.test(\"Validar se o campo 'usuarios' existe\", function () {",
							"    pm.expect(resposta.usuarios).to.exist;",
							"});",
							"",
							"pm.test(\"Validar se o campo 'nome' é 'Fulano da Silva'\", function () {",
							"    pm.expect(resposta.usuarios[0].nome).to.equal(\"Fulano da Silva\")",
							"});",
							"",
							"pm.test(\"Validar se o campo 'email' é 'fulano@qa.com'  \", function () {",
							"    pm.expect(resposta.usuarios[0].email).to.equal(\"fulano@qa.com\")",
							"",
							"});",
							"",
							"pm.test(\"Validar se o campo 'password' é 'teste'  \", function () {",
							"    pm.expect(resposta.usuarios[0].password).to.equal(\"teste\")",
							"});",
							"",
							"pm.test(\"Validar se o campo '_id' é '0uxuPY0cbmQhpEz1'  \", function () {",
							"    pm.expect(resposta.usuarios[0]._id).to.equal(\"0uxuPY0cbmQhpEz1\")",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_base}}/usuarios",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuário - OK (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Validar se o campo 'nome' é 'Fulano da Silva'\", function () {",
							"    pm.expect(resposta.nome).to.equal(\"Fulano da Silva\")",
							"});",
							"",
							"pm.test(\"Validar se o campo 'email' é 'fulano@qa.com'  \", function () {",
							"    pm.expect(resposta.email).to.equal(\"fulano@qa.com\")",
							"",
							"});",
							"",
							"pm.test(\"Validar se o campo 'password' é 'teste'  \", function () {",
							"    pm.expect(resposta.password).to.equal(\"teste\")",
							"});",
							"",
							"pm.test(\"Validar se o campo '_id' é '0uxuPY0cbmQhpEz1'  \", function () {",
							"    pm.expect(resposta._id).to.equal(\"0uxuPY0cbmQhpEz1\")",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_base}}/usuarios/{{id_user_fulano}}",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios",
						"{{id_user_fulano}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuário - OK (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Validar se o campo 'message' é 'Registro excluído com sucesso'\", function () {",
							"    pm.expect(resposta.message).to.equal(\"Registro excluído com sucesso\");",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({",
							"    url: 'http://localhost:3000/usuarios',",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'Bearer ' + pm.environment.get('token')",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            nome: 'usuario que será excluido',",
							"            email: 'usuario-excluido@qa.com.br',",
							"            password: 'teste',",
							"            administrador: 'true'",
							"        })",
							"    }",
							"}, function (err, res) {",
							"    if (err) {",
							"        console.log(\"Erro na request:\", err);",
							"    } else {",
							"        const resposta = res.json();",
							"        pm.collectionVariables.set(\"id_user_delete\", resposta._id);",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url_base}}/usuarios/{{id_user_delete}}",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios",
						"{{id_user_delete}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuário - OK (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Validar se o campo 'message' é 'Registro alterado com sucesso'\", function () {",
							"    pm.expect(resposta.message).to.equal(\"Registro alterado com sucesso\")",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nome\": \"Fulano da Silva Alterado\",\n  \"email\": \"beltrano-alterado@qa.com.br\",\n  \"password\": \"teste-alterado\",\n  \"administrador\": \"false\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_base}}/usuarios/{{id_user}}",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios",
						"{{id_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuários - Created (201)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"pm.collectionVariables.set(\"id_user\", resposta._id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"pm.test(\"Validar se o campo 'message' é 'Cadastro realizado com sucesso'\", function () {",
							"    pm.expect(resposta.message).to.equal(\"Cadastro realizado com sucesso\");",
							"});",
							"",
							"pm.test(\"Validar se o campo '_id' existe\", function () {",
							"    pm.expect(resposta._id).to.exist;",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nome\": \"Beltrano da Silva\",\n  \"email\": \"beltrano@qa.com.br\",\n  \"password\": \"teste\",\n  \"administrador\": \"true\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_base}}/usuarios",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuário - Created (201)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"pm.test(\"Validar se o campo 'message' é 'Cadastro com sucesso'\", function () {",
							"    pm.expect(resposta.message).to.equal(\"Cadastro realizado com sucesso\")",
							"});",
							"",
							"pm.test(\"Validar se o campo '_id' existe\", function () {",
							"    pm.expect(resposta._id).to.exist;",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nome\": \"Eduarda Cunha\",\n  \"email\": \"eduarda.cunha93@example.com\",\n  \"password\": \"123456\",\n  \"administrador\": \"true\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_base}}/usuarios/id_inexistente",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios",
						"id_inexistente"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuário - Bad Request (400)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.equal(400);",
							"});",
							"",
							"pm.test(\"Validar se o campo 'message' é 'CEste email já está sendo usado'\", function () {",
							"    pm.expect(resposta.message).to.equal(\"Este email já está sendo usado\")",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"nome\": \"Eduarda Cunha\",\n  \"email\": \"eduarda.cunha93@example.com\",\n  \"password\": \"123456\",\n  \"administrador\": \"true\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_base}}/usuarios/id_inexistente",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios",
						"id_inexistente"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuário - Bad Request (400)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();",
							"pm.collectionVariables.set(\"id_user\", resposta._id);",
							"",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test(\"Validar se o campo 'message' é 'Registro excluído com sucesso'\", function () {",
							"    pm.expect(resposta.message).to.equal(\"Registro excluído com sucesso\");",
							"});",
							"",
							"pm.test(\"Validar se o tempo da request é menor que 100ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({",
							"    url: 'http://localhost:3000/usuarios',",
							"    method: 'POST',",
							"    header: {",
							"        'Content-Type': 'application/json',",
							"        'Authorization': 'Bearer ' + pm.environment.get('token')",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({",
							"            nome: 'usuario que será excluido',",
							"            email: 'usuario-excluido@qa.com.br',",
							"            password: 'teste',",
							"            administrador: 'true'",
							"        })",
							"    }",
							"}, function (err, res) {",
							"    if (err) {",
							"        console.log(\"Erro na request:\", err);",
							"    } else {",
							"        const resposta = res.json();",
							"        pm.collectionVariables.set(\"id_user_delete\", resposta._id);",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url_base}}/usuarios/{{id_user_delete}}",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"usuarios",
						"{{id_user_delete}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url_base",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "id_user",
			"value": "",
			"type": "string"
		},
		{
			"key": "id_user_fulano",
			"value": "",
			"type": "string"
		},
		{
			"key": "id_user_delete",
			"value": "",
			"type": "string"
		}
	]
}
